/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ql_hdtd;

import java.sql.SQLException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pc
 */
public class QL_HDTD extends javax.swing.JFrame {

    /**
     * Creates new form QL_HDTD
     */
    public QL_HDTD() {
        initComponents();
        Show_Table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtNgayLap = new javax.swing.JTextField();
        txtSoKW = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        txtTong = new javax.swing.JTextField();
        btnHienthi = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("QUẢN LÝ HÓA ĐƠN TIỀN ĐIỆN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã HD");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Ngày Lập HD");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số KW");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Đơn giá");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Tổng");

        txtMa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtNgayLap.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtSoKW.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDonGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtTong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnHienthi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHienthi.setText("Hiển thị");
        btnHienthi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienthiActionPerformed(evt);
            }
        });

        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tìm kiếm theo mã HD");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã HD", "Ngày Lập HD", "Số KW", "Đơn giá", "Tổng"
            }
        ));
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbHoaDon);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(btnHienthi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThoat))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSoKW, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSua)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnTimKiem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHienthi)
                            .addComponent(btnThoat))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSoKW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThem)
                        .addComponent(btnSua)
                        .addComponent(btnXoa)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem)
                    .addComponent(jLabel7))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public int Dem(){
        int dem =0;
        try {
            Connect cn = new Connect();
            ResultSet rs = cn.GetData("hoadon");
            while(rs.next()){
                dem++;
            }
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dem;
    }
    public void Show_Table(){
        DefaultTableModel mod = (DefaultTableModel) tbHoaDon.getModel();
        mod.setRowCount(Dem());
        try {
            Connect cn = new Connect();
            ResultSet rs = cn.GetData("hoadon");
            int i =0;
            while(rs.next()){
                tbHoaDon.setValueAt(rs.getString("MaHD"), i, 0);
                tbHoaDon.setValueAt(rs.getString("NgayLapHD"), i, 1);
                tbHoaDon.setValueAt(rs.getString("SoKW"), i, 2);
                tbHoaDon.setValueAt(rs.getString("DonGia"), i, 3);
                tbHoaDon.setValueAt(rs.getString("Tong"), i, 4);
                i++;
            }
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnHienthiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienthiActionPerformed
        Show_Table();
    }//GEN-LAST:event_btnHienthiActionPerformed
 private boolean check(String Ma){
     boolean check = false;
        try {
            Connect cn = new Connect();
            ResultSet rs = cn.GetData("hoadon");
            while(rs.next()){
                if(rs.getString(1).equals(Ma)==true){
                    check = true;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
        return check;
 }
 public void Insert(){
     String Ma = txtMa.getText();
     String NgayLap = txtNgayLap.getText();
     float SoKW = Float.parseFloat(txtSoKW.getText());
     int DonGia = Integer.parseInt(txtDonGia.getText());
     int Tong = Integer.parseInt(txtTong.getText());
        try {
            Connect cn = new Connect();
            cn.Insert(Ma, NgayLap, SoKW, DonGia, Tong);
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
     
 }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String Ma = txtMa.getText();
        String NgayLap = txtNgayLap.getText();
        String SoKW = txtSoKW.getText();
        String DonGia = txtDonGia.getText();
        String Tong = txtTong.getText();
        
        Ma = Ma.replaceAll("", "");
        NgayLap = NgayLap.replaceAll("", "");
        SoKW = SoKW.replaceAll("","");
        DonGia = DonGia.replaceAll("","");
        Tong = Tong.replaceAll("", "");
        
        if(txtMa.getText().equals("")==true|| txtNgayLap.getText().equals("")==true
                ||txtSoKW.getText().equals("")==true||txtDonGia.getText().equals("")==true
                ||txtTong.getText().equals("")==true){
            JOptionPane.showMessageDialog(null,"Bạn chưa nhập hết dữ liệu");
        }
        else{
            if(check(Ma)==true){
                JOptionPane.showMessageDialog(null,"Mã Hóa đơn bị trùng");
            }
            else{
                Insert();
                Show_Table();
                JOptionPane.showMessageDialog(null,"Bạn đã thêm thành công");
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed
    public void Update(){
        try {
            Connect cn = new Connect();
            cn.Update(txtMa.getText(),txtNgayLap.getText(),Float.parseFloat(txtSoKW.getText()),
                    Integer.parseInt(txtDonGia.getText()), Integer.parseInt(txtTong.getText()));
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        if(check(txtMa.getText())==true){
            Update();
            Show_Table();
            JOptionPane.showMessageDialog(null,"Bạn đã sửa thành công!!!");
        }else{
            JOptionPane.showMessageDialog(null,"Mã hóa đơn không trùng với dữ liệu");
        }
    }//GEN-LAST:event_btnSuaActionPerformed
    public void Delete(String Ma){
        try {
            Connect cn = new Connect();
            cn.Delete(Ma);
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
       String Ma = txtMa.getText();
       if(check(Ma)==true){
         int result = JOptionPane.showConfirmDialog(null,"Bạn có muốn xóa hóa đơn này không?","Thông báo",
               JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
       if(result == JOptionPane.YES_OPTION){
           Delete(Ma);
           Show_Table();
           JOptionPane.showMessageDialog(null,"Bạn đã xóa thành công!!!");
       }else{
           
       }  
       }
       else{
           JOptionPane.showMessageDialog(null,"Mã hóa đơn cần xóa không trùng với dữ liệu");
       }
    }//GEN-LAST:event_btnXoaActionPerformed
    public void Clear_Table(){
        DefaultTableModel mod = (DefaultTableModel) tbHoaDon.getModel();
        mod.setRowCount(0);
        mod.setRowCount(Dem());
    }
    public void Search(String Name){
        Clear_Table();
        try {
            Connect cn = new Connect();
            ResultSet rs = cn.Get_Search(Name);
            int i =0;
            while(rs.next()){
                tbHoaDon.setValueAt(rs.getString("MaHD"), i,0);
                tbHoaDon.setValueAt(rs.getString("NgayLapHD"), i, 1);
                tbHoaDon.setValueAt(rs.getString("SoKW"), i, 2);
                tbHoaDon.setValueAt(rs.getString("DonGia"), i, 3);
                tbHoaDon.setValueAt(rs.getString("Tong"), i, 4);
                i++;
            }
            cn.Close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
       String Name = txtTimKiem.getText();
       Search(Name);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int result = JOptionPane.showConfirmDialog(null,"Bạn muốn thoát khỏi chương trình","Thông báo",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            this.setVisible(false);
        }else{
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnThoatActionPerformed
    public void Show_Detail(){
        try {
            Connect cn = new Connect();
            ResultSet rs = cn.GetData("hoadon");
            int i = tbHoaDon.getSelectedRow();
            
            txtMa.setText((String) tbHoaDon.getValueAt(i, 0));
            txtNgayLap.setText((String) tbHoaDon.getValueAt(i, 1));
            txtSoKW.setText((String) tbHoaDon.getValueAt(i, 2));
            txtDonGia.setText((String) tbHoaDon.getValueAt(i, 3));
            txtTong.setText((String) tbHoaDon.getValueAt(i, 4));
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(QL_HDTD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        Show_Detail();
    }//GEN-LAST:event_tbHoaDonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QL_HDTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QL_HDTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QL_HDTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QL_HDTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QL_HDTD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienthi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgayLap;
    private javax.swing.JTextField txtSoKW;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTong;
    // End of variables declaration//GEN-END:variables
}
