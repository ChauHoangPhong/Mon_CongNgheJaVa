/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanlykhachhang;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class QLKH extends javax.swing.JFrame {

    /**
     * Creates new form QLKH
     */
    public QLKH() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbMaKH = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        txtHoten = new javax.swing.JTextField();
        lbHoTen = new javax.swing.JLabel();
        txtTuoi = new javax.swing.JTextField();
        lbTuoi = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        lbDiachi = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSUA = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        btnHienthi = new javax.swing.JButton();
        btnTimkiem = new javax.swing.JButton();
        lbTimkiemMa = new javax.swing.JLabel();
        tfMatimkiem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("QUẢN LÝ KHÁCH HÀNG");

        lbMaKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbMaKH.setText("MÃ KHÁCH HÀNG");

        txtMaKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtHoten.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbHoTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbHoTen.setText("HỌ TÊN");

        txtTuoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbTuoi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTuoi.setText("TUỔI");

        txtDiaChi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbDiachi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbDiachi.setText("ĐỊA CHỈ");

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemMouseClicked(evt);
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSUA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSUA.setText("SỬA");
        btnSUA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSUAMouseClicked(evt);
            }
        });
        btnSUA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUAActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXoaMouseClicked(evt);
            }
        });
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Khách Hàng", "Họ Tên", "Tuổi", "Địa chỉ"
            }
        ));
        tblDanhSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDanhSach);

        btnHienthi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHienthi.setText("HIỂN THỊ");
        btnHienthi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHienthiMouseClicked(evt);
            }
        });
        btnHienthi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienthiActionPerformed(evt);
            }
        });

        btnTimkiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimkiem.setText("TÌM KIẾM");
        btnTimkiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimkiemMouseClicked(evt);
            }
        });
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        lbTimkiemMa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbTimkiemMa.setText("TÌM KIẾM THEO MÃ");

        tfMatimkiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSUA, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnHienthi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(lbTimkiemMa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfMatimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbHoTen)
                            .addComponent(lbMaKH)
                            .addComponent(lbTuoi)
                            .addComponent(lbDiachi))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaKH)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHoTen)
                    .addComponent(txtHoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTuoi)
                    .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbDiachi)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTimkiemMa)
                    .addComponent(tfMatimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSUA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHienthi, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public int Dem() {
        int dem = 0;
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData("khachhang");
            while (rs.next()) {
                dem++;
            }

            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
        return dem;
    }
    public void ShowTable() throws ClassNotFoundException {
     //   tblSP.removeAll();
        DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
        model.setRowCount(Dem());//Thiết lập số dòng của jtable = số dòng của bảng của DataBase
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData("khachhang");
            int i = 0;
            while (rs.next()) {
                tblDanhSach.setValueAt(rs.getString("MaKH"), i, 0);
                tblDanhSach.setValueAt(rs.getString("HoTen"), i, 1);
                tblDanhSach.setValueAt(rs.getString("Tuoi"), i, 2);
                tblDanhSach.setValueAt(rs.getString("Diachi"), i, 3);
                i++;
            }
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void capnhatDL() {
        Connect pt;
        try {
            pt = new Connect();
            pt.Update(txtMaKH.getText(), txtHoten.getText(), Integer.parseInt(txtTuoi.getText()), txtDiaChi.getText());
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void Show_Detail() {
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData("khachhang");
            int i = tblDanhSach.getSelectedRow();

            txtMaKH.setText((String) tblDanhSach.getValueAt(i, 0));
            txtHoten.setText((String) tblDanhSach.getValueAt(i, 1));
            txtTuoi.setText((String) tblDanhSach.getValueAt(i, 2));
            txtDiaChi.setText((String) tblDanhSach.getValueAt(i, 3));

            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void Insert() {
        String MaKH = txtMaKH.getText();
        String HoTen = txtHoten.getText();
        int tuoi = Integer.parseInt(txtTuoi.getText());
        String Diachi = txtDiaChi.getText();
        Connect pt;
        try {
            pt = new Connect();
            pt.Insert(MaKH,HoTen,tuoi,Diachi);
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSUAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSUAActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnHienthiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienthiActionPerformed
        try {
            ShowTable();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHienthiActionPerformed

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void btnSUAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSUAMouseClicked
      if (check(txtMaKH.getText()) == true) {
            capnhatDL();
          try {
              ShowTable();
          } catch (ClassNotFoundException ex) {
              Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
          }
            JOptionPane.showMessageDialog(null, "Bạn đã cập nhật thành công!");
        } else {
            JOptionPane.showMessageDialog(null, "Mã khách hàng không trùng với dữ liệu cần sửa!");

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSUAMouseClicked

    private void tblDanhSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhSachMouseClicked
               Show_Detail();        // TODO add your handling code here:
    }//GEN-LAST:event_tblDanhSachMouseClicked

    private void btnThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemMouseClicked
txtMaKH.setEnabled(true);
        String MaKH = txtMaKH.getText();
        String HoTen = txtHoten.getText();
        String tuoi = txtTuoi.getText();
        String Diachi = txtDiaChi.getText();
        MaKH = MaKH.replaceAll(" ", "");
        HoTen = HoTen.replaceAll(" ", "");
        tuoi = tuoi.replaceAll(" ", "");
        Diachi = Diachi.replaceAll(" ", "");
        if (txtMaKH.getText().equals("") == true || txtHoten.equals("") == true || txtTuoi.equals("") == true|| txtDiaChi.equals("") == true) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập dữ liệu!");
        } else {
            if (check(MaKH) == true) {
                JOptionPane.showMessageDialog(null, "Mã khách hàng bị trùng!!! Vui lòng nhập lại!!!");
            } else {
                Insert();
                try {
                    ShowTable();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Đã thêm thành công");

            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemMouseClicked
private boolean check(String MaKH) {
    boolean check = false;
    try {
        Connect pt = new Connect();

        ResultSet rs = pt.GetData("khachhang");
        while (rs.next()) {
            if (rs.getString("MaKH").equals(MaKH)) {
                check = true;
                break;
            }
        }
        pt.Close();
    } catch (SQLException | ClassNotFoundException ex) {
        ex.printStackTrace();
    }
    return check;
}


    private void btnXoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXoaMouseClicked
       String MaKH = txtMaKH.getText();
        if (check(MaKH) == true) {
            int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa khách hàng này không", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (result == JOptionPane.YES_OPTION) {
                Delete(MaKH);
                try {
                    ShowTable();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
                } 
            } else {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Mã khách hàng không trùng với mã khách hàng trong database!!!");
        } // TODO add your handling code here:
    }//GEN-LAST:event_btnXoaMouseClicked

 public void Clear_Table() {
        DefaultTableModel model = (DefaultTableModel) tblDanhSach.getModel();
        model.setRowCount(0);
        model.setRowCount(Dem());
    }
    public void show_timkiem(String MaKH) {
        Clear_Table();
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData_TK(MaKH);
            int i = 0;
            while (rs.next()) {
                tblDanhSach.setValueAt(rs.getString("MaKH"), i, 0);
                tblDanhSach.setValueAt(rs.getString("HoTen"), i, 1);
                tblDanhSach.setValueAt(rs.getString("Tuoi"), i, 2);
                tblDanhSach.setValueAt(rs.getString("Diachi"), i, 3);
                i++;
            }
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btnTimkiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimkiemMouseClicked
        String MaKH = tfMatimkiem.getText();
        show_timkiem(MaKH);
    }//GEN-LAST:event_btnTimkiemMouseClicked

    private void btnHienthiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHienthiMouseClicked
        tblDanhSach.removeAll();
 try {
 Connect pt = new Connect();
 ResultSet rs = pt.GetData("Khachhang");
 int i=0;
 while (rs.next()){
 tblDanhSach.setValueAt(rs.getString("MaKH"), i, 0);
 tblDanhSach.setValueAt(rs.getString("HoTen"), i, 1);
 tblDanhSach.setValueAt(rs.getString("Tuoi"), i, 2);
 tblDanhSach.setValueAt(rs.getString("Diachi"), i, 2);
 i++;
 }
 pt.Close();
 } catch (ClassNotFoundException ex) {
 Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, 
ex);
 } catch (SQLException ex) {
Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, 
ex);
 }
    }//GEN-LAST:event_btnHienthiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLKH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienthi;
    private javax.swing.JButton btnSUA;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbDiachi;
    private javax.swing.JLabel lbHoTen;
    private javax.swing.JLabel lbMaKH;
    private javax.swing.JLabel lbTimkiemMa;
    private javax.swing.JLabel lbTuoi;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField tfMatimkiem;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtHoten;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

   public void Delete(String MaKH) {

        Connect pt;
        try {
            pt = new Connect();
            pt.Delete(MaKH);
            pt.Close();
            JOptionPane.showMessageDialog(null, "Xóa khách hàng thành công!");
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLKH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }



}
